// This is a comment.
; return 42;
42

// Empty lines are ignored

// Both thrown and return exceptions can be matched with a simple error value
; eval();
E_ARGS

// Multi-line commands: continuation with `>`.
; return 1 + 2 +
> 3;
6

// You can change the player used to execute commands
@programmer
; return player;
#4
; return {player.programmer, player.wizard, player.name};
{1, 0, "programmer"}

@nonprogrammer
; return 42;
E_PERM

@wizard
; return {player.programmer, player.wizard, player};
{1, 1, #3}

// Execute non-eval commands (i.e. verbs) with `%`
// Remember to still quote the expected output for `eval()`!
; $object = create($nothing);
; add_verb($object, {player, "xd", "accept"}, {"this", "none", "this"});
; set_verb_code($object, "accept", {"return 1;"});
; add_verb($object, {player, "xd", "hi"}, {"this", "none", "this"});
; set_verb_code($object, "hi", {
>   "return \"hello player\";"
> });
; move(player, $object);
% hi
"hello player"