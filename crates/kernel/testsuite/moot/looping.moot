// adapted from https://github.com/toddsundsted/stunt/blob/a4158f5835f1beb9d754c92fd5b3a137e459aabf/test/test_looping.rb

@programmer

// test that loop expression must evaluate to a list
; x = {}; for i in ("12345"); x = {@x, i}; endfor; return x;
E_TYPE
; x = {}; for i in (12345); x = {@x, i}; endfor; return x;
E_TYPE

// test_that_valid_for_loops_compile
; x = {}; for i in ({1, 2, 3, 4, 5}); if (i > 2); break i; endif; x = {@x, i}; endfor; return x;
{1, 2}
; x = {}; for i in ({1, 2, 3, 4, 5}); if (i < 3); continue i; endif; x = {@x, i}; endfor; return x;
{3, 4, 5}

// test_that_invalid_for_loops_do_not_compile
; return eval("x = {}; for in ({1, 2, 3}); endfor; return x;");
<{0, "Failure to parse program: Parse error:  --> 1:13
<  |
<1 | x = {}; for in ({1, 2, 3}); endfor; return x;
<  |             ^---
<  |
<  = expected ident"}

; return eval("x = {}; for i, j in ({1, 2, 3}); endfor; return x;");
<{0, "Failure to parse program: Parse error:  --> 1:9
<  |
<1 | x = {}; for i, j in ({1, 2, 3}); endfor; return x;
<  |         ^---
<  |
<  = expected EOI or statement"}

; return eval("x = {}; for i in ({1, 2, 3}); continue foo; endfor; return x;");
{0, "Could not find loop with id: foo"}

; return eval("x = {}; for i in ({1, 2, 3}); break bar; endfor; return x;");
{0, "Could not find loop with id: bar"}
