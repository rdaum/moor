// Adapted from https://github.com/toddsundsted/stunt/blob/e83e946/test/test_objects.rb
//   def test_create_errors

@wizard
; create();
E_ARGS
; return create(1);
E_TYPE
; return create("1");
E_TYPE
; return create(1, 2);
E_TYPE
; return create($object, "2");
E_TYPE

; create($ambiguous_match);
E_PERM
; create($failed_match);
E_PERM
; create($invalid_object);
E_PERM

; return create({1});
E_TYPE
; return create({"1"});
E_TYPE
; return create({$nothing});
E_TYPE 
; return create({$ambiguous_match});
E_TYPE
; return create({$failed_match});
E_TYPE
; return create({$invalid_object});
E_TYPE

// A variety of tests that check permissions.

; add_property($system, "a", create($nothing), {$wizard_player, "rwc"});
; add_property($system, "b", create($a, $a), {$wizard_player, "rwc"});
; $b.f = 1;
; return $a.owner;
$wizard_player
; return $b.owner;
$a

@programmer
; create($a);
E_PERM
; create($b, $invalid_object);
E_PERM
; create($b, $wizard_player);
E_PERM
; create($b, $nothing);
E_PERM

; return valid(create($b));
1

; add_property($system, "c", create($nothing), {$programmer_player, ""});
; add_property($system, "d", create($b, $programmer_player), {$programmer_player, "rwc"});
; $d.f = 1;

; return $c.owner;
$programmer_player
; return $d.owner;
$programmer_player

@wizard
; return valid(create($a));
1
; return valid(create($b, $wizard_player));
1
; return valid(create($c, $programmer_player));
1
; return valid(create($d));
1