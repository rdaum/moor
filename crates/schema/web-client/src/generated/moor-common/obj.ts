// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ObjUnion, unionToObjUnion, unionListToObjUnion } from '../moor-common/obj-union.js';


export class Obj {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Obj {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsObj(bb:flatbuffers.ByteBuffer, obj?:Obj):Obj {
  return (obj || new Obj()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsObj(bb:flatbuffers.ByteBuffer, obj?:Obj):Obj {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Obj()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

objType():ObjUnion {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ObjUnion.NONE;
}

obj<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startObj(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addObjType(builder:flatbuffers.Builder, objType:ObjUnion) {
  builder.addFieldInt8(0, objType, ObjUnion.NONE);
}

static addObj(builder:flatbuffers.Builder, objOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, objOffset, 0);
}

static endObj(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 6) // obj
  return offset;
}

static createObj(builder:flatbuffers.Builder, objType:ObjUnion, objOffset:flatbuffers.Offset):flatbuffers.Offset {
  Obj.startObj(builder);
  Obj.addObjType(builder, objType);
  Obj.addObj(builder, objOffset);
  return Obj.endObj(builder);
}
}
