// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

export class ObjectRefMatch {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): ObjectRefMatch {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsObjectRefMatch(bb: flatbuffers.ByteBuffer, obj?: ObjectRefMatch): ObjectRefMatch {
        return (obj || new ObjectRefMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsObjectRefMatch(bb: flatbuffers.ByteBuffer, obj?: ObjectRefMatch): ObjectRefMatch {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ObjectRefMatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    matchString(): string | null;
    matchString(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    matchString(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    static startObjectRefMatch(builder: flatbuffers.Builder) {
        builder.startObject(1);
    }

    static addMatchString(builder: flatbuffers.Builder, matchStringOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, matchStringOffset, 0);
    }

    static endObjectRefMatch(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // match_string
        return offset;
    }

    static createObjectRefMatch(
        builder: flatbuffers.Builder,
        matchStringOffset: flatbuffers.Offset,
    ): flatbuffers.Offset {
        ObjectRefMatch.startObjectRefMatch(builder);
        ObjectRefMatch.addMatchString(builder, matchStringOffset);
        return ObjectRefMatch.endObjectRefMatch(builder);
    }
}
