// automatically generated by the FlatBuffers compiler, do not modify

import { ObjectRefId } from "../moor-common/object-ref-id.js";
import { ObjectRefMatch } from "../moor-common/object-ref-match.js";
import { ObjectRefSysObj } from "../moor-common/object-ref-sys-obj.js";

export enum ObjectRefUnion {
    NONE = 0,
    ObjectRefId = 1,
    ObjectRefSysObj = 2,
    ObjectRefMatch = 3,
}

export function unionToObjectRefUnion(
    type: ObjectRefUnion,
    accessor: (
        obj: ObjectRefId | ObjectRefMatch | ObjectRefSysObj,
    ) => ObjectRefId | ObjectRefMatch | ObjectRefSysObj | null,
): ObjectRefId | ObjectRefMatch | ObjectRefSysObj | null {
    switch (ObjectRefUnion[type]) {
        case "NONE":
            return null;
        case "ObjectRefId":
            return accessor(new ObjectRefId())! as ObjectRefId;
        case "ObjectRefSysObj":
            return accessor(new ObjectRefSysObj())! as ObjectRefSysObj;
        case "ObjectRefMatch":
            return accessor(new ObjectRefMatch())! as ObjectRefMatch;
        default:
            return null;
    }
}

export function unionListToObjectRefUnion(
    type: ObjectRefUnion,
    accessor: (
        index: number,
        obj: ObjectRefId | ObjectRefMatch | ObjectRefSysObj,
    ) => ObjectRefId | ObjectRefMatch | ObjectRefSysObj | null,
    index: number,
): ObjectRefId | ObjectRefMatch | ObjectRefSysObj | null {
    switch (ObjectRefUnion[type]) {
        case "NONE":
            return null;
        case "ObjectRefId":
            return accessor(index, new ObjectRefId())! as ObjectRefId;
        case "ObjectRefSysObj":
            return accessor(index, new ObjectRefSysObj())! as ObjectRefSysObj;
        case "ObjectRefMatch":
            return accessor(index, new ObjectRefMatch())! as ObjectRefMatch;
        default:
            return null;
    }
}
