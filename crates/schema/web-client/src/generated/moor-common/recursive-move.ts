// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Obj } from '../moor-common/obj.js';


export class RecursiveMove {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RecursiveMove {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRecursiveMove(bb:flatbuffers.ByteBuffer, obj?:RecursiveMove):RecursiveMove {
  return (obj || new RecursiveMove()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRecursiveMove(bb:flatbuffers.ByteBuffer, obj?:RecursiveMove):RecursiveMove {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RecursiveMove()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

fromObj(obj?:Obj):Obj|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Obj()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

toObj(obj?:Obj):Obj|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Obj()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startRecursiveMove(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addFromObj(builder:flatbuffers.Builder, fromObjOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, fromObjOffset, 0);
}

static addToObj(builder:flatbuffers.Builder, toObjOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, toObjOffset, 0);
}

static endRecursiveMove(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // from_obj
  builder.requiredField(offset, 6) // to_obj
  return offset;
}

}
