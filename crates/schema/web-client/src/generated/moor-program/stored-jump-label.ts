// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { StoredName } from '../moor-program/stored-name.js';


export class StoredJumpLabel {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StoredJumpLabel {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStoredJumpLabel(bb:flatbuffers.ByteBuffer, obj?:StoredJumpLabel):StoredJumpLabel {
  return (obj || new StoredJumpLabel()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStoredJumpLabel(bb:flatbuffers.ByteBuffer, obj?:StoredJumpLabel):StoredJumpLabel {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StoredJumpLabel()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

position():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

name(obj?:StoredName):StoredName|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new StoredName()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startStoredJumpLabel(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt16(0, id, 0);
}

static addPosition(builder:flatbuffers.Builder, position:number) {
  builder.addFieldInt16(1, position, 0);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, nameOffset, 0);
}

static endStoredJumpLabel(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
