// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Symbol } from '../moor-common/symbol.js';


export class NoWorkerAvailable {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):NoWorkerAvailable {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsNoWorkerAvailable(bb:flatbuffers.ByteBuffer, obj?:NoWorkerAvailable):NoWorkerAvailable {
  return (obj || new NoWorkerAvailable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsNoWorkerAvailable(bb:flatbuffers.ByteBuffer, obj?:NoWorkerAvailable):NoWorkerAvailable {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new NoWorkerAvailable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

workerType(obj?:Symbol):Symbol|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Symbol()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startNoWorkerAvailable(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addWorkerType(builder:flatbuffers.Builder, workerTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, workerTypeOffset, 0);
}

static endNoWorkerAvailable(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // worker_type
  return offset;
}

static createNoWorkerAvailable(builder:flatbuffers.Builder, workerTypeOffset:flatbuffers.Offset):flatbuffers.Offset {
  NoWorkerAvailable.startNoWorkerAvailable(builder);
  NoWorkerAvailable.addWorkerType(builder, workerTypeOffset);
  return NoWorkerAvailable.endNoWorkerAvailable(builder);
}
}
