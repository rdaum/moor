// automatically generated by the FlatBuffers compiler, do not modify

import { VerbProgramFailure } from "../moor-rpc/verb-program-failure.js";
import { VerbProgramSuccess } from "../moor-rpc/verb-program-success.js";

export enum VerbProgramResponseUnion {
    NONE = 0,
    VerbProgramSuccess = 1,
    VerbProgramFailure = 2,
}

export function unionToVerbProgramResponseUnion(
    type: VerbProgramResponseUnion,
    accessor: (obj: VerbProgramFailure | VerbProgramSuccess) => VerbProgramFailure | VerbProgramSuccess | null,
): VerbProgramFailure | VerbProgramSuccess | null {
    switch (VerbProgramResponseUnion[type]) {
        case "NONE":
            return null;
        case "VerbProgramSuccess":
            return accessor(new VerbProgramSuccess())! as VerbProgramSuccess;
        case "VerbProgramFailure":
            return accessor(new VerbProgramFailure())! as VerbProgramFailure;
        default:
            return null;
    }
}

export function unionListToVerbProgramResponseUnion(
    type: VerbProgramResponseUnion,
    accessor: (
        index: number,
        obj: VerbProgramFailure | VerbProgramSuccess,
    ) => VerbProgramFailure | VerbProgramSuccess | null,
    index: number,
): VerbProgramFailure | VerbProgramSuccess | null {
    switch (VerbProgramResponseUnion[type]) {
        case "NONE":
            return null;
        case "VerbProgramSuccess":
            return accessor(index, new VerbProgramSuccess())! as VerbProgramSuccess;
        case "VerbProgramFailure":
            return accessor(index, new VerbProgramFailure())! as VerbProgramFailure;
        default:
            return null;
    }
}
