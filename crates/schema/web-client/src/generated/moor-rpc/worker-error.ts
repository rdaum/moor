// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import {
    unionListToWorkerErrorUnion,
    unionToWorkerErrorUnion,
    WorkerErrorUnion,
} from "../moor-rpc/worker-error-union.js";

export class WorkerError {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): WorkerError {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsWorkerError(bb: flatbuffers.ByteBuffer, obj?: WorkerError): WorkerError {
        return (obj || new WorkerError()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsWorkerError(bb: flatbuffers.ByteBuffer, obj?: WorkerError): WorkerError {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new WorkerError()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    errorType(): WorkerErrorUnion {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? this.bb!.readUint8(this.bb_pos + offset) : WorkerErrorUnion.NONE;
    }

    error<T extends flatbuffers.Table>(obj: any): any | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
    }

    static startWorkerError(builder: flatbuffers.Builder) {
        builder.startObject(2);
    }

    static addErrorType(builder: flatbuffers.Builder, errorType: WorkerErrorUnion) {
        builder.addFieldInt8(0, errorType, WorkerErrorUnion.NONE);
    }

    static addError(builder: flatbuffers.Builder, errorOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, errorOffset, 0);
    }

    static endWorkerError(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 6); // error
        return offset;
    }

    static createWorkerError(
        builder: flatbuffers.Builder,
        errorType: WorkerErrorUnion,
        errorOffset: flatbuffers.Offset,
    ): flatbuffers.Offset {
        WorkerError.startWorkerError(builder);
        WorkerError.addErrorType(builder, errorType);
        WorkerError.addError(builder, errorOffset);
        return WorkerError.endWorkerError(builder);
    }
}
