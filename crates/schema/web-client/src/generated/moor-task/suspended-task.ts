// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { Task } from "../moor-task/task.js";
import { WakeCondition } from "../moor-task/wake-condition.js";

export class SuspendedTask {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): SuspendedTask {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsSuspendedTask(bb: flatbuffers.ByteBuffer, obj?: SuspendedTask): SuspendedTask {
        return (obj || new SuspendedTask()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsSuspendedTask(bb: flatbuffers.ByteBuffer, obj?: SuspendedTask): SuspendedTask {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new SuspendedTask()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    version(): number {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
    }

    wakeCondition(obj?: WakeCondition): WakeCondition | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? (obj || new WakeCondition()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    task(obj?: Task): Task | null {
        const offset = this.bb!.__offset(this.bb_pos, 8);
        return offset ? (obj || new Task()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    static startSuspendedTask(builder: flatbuffers.Builder) {
        builder.startObject(3);
    }

    static addVersion(builder: flatbuffers.Builder, version: number) {
        builder.addFieldInt16(0, version, 0);
    }

    static addWakeCondition(builder: flatbuffers.Builder, wakeConditionOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, wakeConditionOffset, 0);
    }

    static addTask(builder: flatbuffers.Builder, taskOffset: flatbuffers.Offset) {
        builder.addFieldOffset(2, taskOffset, 0);
    }

    static endSuspendedTask(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 6); // wake_condition
        builder.requiredField(offset, 8); // task
        return offset;
    }
}
