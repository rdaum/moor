# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorCommon

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ObjectRefSysObj(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ObjectRefSysObj()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsObjectRefSysObj(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ObjectRefSysObj
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ObjectRefSysObj
    def Symbols(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from MoorCommon.Symbol import Symbol
            obj = Symbol()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ObjectRefSysObj
    def SymbolsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ObjectRefSysObj
    def SymbolsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

def ObjectRefSysObjStart(builder):
    builder.StartObject(1)

def Start(builder):
    ObjectRefSysObjStart(builder)

def ObjectRefSysObjAddSymbols(builder, symbols):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(symbols), 0)

def AddSymbols(builder, symbols):
    ObjectRefSysObjAddSymbols(builder, symbols)

def ObjectRefSysObjStartSymbolsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSymbolsVector(builder, numElems: int) -> int:
    return ObjectRefSysObjStartSymbolsVector(builder, numElems)

def ObjectRefSysObjEnd(builder):
    return builder.EndObject()

def End(builder):
    return ObjectRefSysObjEnd(builder)
