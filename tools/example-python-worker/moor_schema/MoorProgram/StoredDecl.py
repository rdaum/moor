# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorProgram

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StoredDecl(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StoredDecl()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStoredDecl(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # StoredDecl
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StoredDecl
    def DeclType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # StoredDecl
    def Identifier(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorProgram.StoredVariable import StoredVariable
            obj = StoredVariable()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StoredDecl
    def Depth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # StoredDecl
    def Constant(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # StoredDecl
    def ScopeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

def StoredDeclStart(builder):
    builder.StartObject(5)

def Start(builder):
    StoredDeclStart(builder)

def StoredDeclAddDeclType(builder, declType):
    builder.PrependUint8Slot(0, declType, 0)

def AddDeclType(builder, declType):
    StoredDeclAddDeclType(builder, declType)

def StoredDeclAddIdentifier(builder, identifier):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(identifier), 0)

def AddIdentifier(builder, identifier):
    StoredDeclAddIdentifier(builder, identifier)

def StoredDeclAddDepth(builder, depth):
    builder.PrependUint64Slot(2, depth, 0)

def AddDepth(builder, depth):
    StoredDeclAddDepth(builder, depth)

def StoredDeclAddConstant(builder, constant):
    builder.PrependBoolSlot(3, constant, 0)

def AddConstant(builder, constant):
    StoredDeclAddConstant(builder, constant)

def StoredDeclAddScopeId(builder, scopeId):
    builder.PrependUint16Slot(4, scopeId, 0)

def AddScopeId(builder, scopeId):
    StoredDeclAddScopeId(builder, scopeId)

def StoredDeclEnd(builder):
    return builder.EndObject()

def End(builder):
    return StoredDeclEnd(builder)
