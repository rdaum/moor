# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorProgram

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StoredForRangeOperand(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StoredForRangeOperand()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStoredForRangeOperand(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # StoredForRangeOperand
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StoredForRangeOperand
    def LoopVariable(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorProgram.StoredName import StoredName
            obj = StoredName()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StoredForRangeOperand
    def EndLabel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # StoredForRangeOperand
    def EnvironmentWidth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

def StoredForRangeOperandStart(builder):
    builder.StartObject(3)

def Start(builder):
    StoredForRangeOperandStart(builder)

def StoredForRangeOperandAddLoopVariable(builder, loopVariable):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(loopVariable), 0)

def AddLoopVariable(builder, loopVariable):
    StoredForRangeOperandAddLoopVariable(builder, loopVariable)

def StoredForRangeOperandAddEndLabel(builder, endLabel):
    builder.PrependUint16Slot(1, endLabel, 0)

def AddEndLabel(builder, endLabel):
    StoredForRangeOperandAddEndLabel(builder, endLabel)

def StoredForRangeOperandAddEnvironmentWidth(builder, environmentWidth):
    builder.PrependUint16Slot(2, environmentWidth, 0)

def AddEnvironmentWidth(builder, environmentWidth):
    StoredForRangeOperandAddEnvironmentWidth(builder, environmentWidth)

def StoredForRangeOperandEnd(builder):
    return builder.EndObject()

def End(builder):
    return StoredForRangeOperandEnd(builder)
