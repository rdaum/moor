# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorProgram

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StoredListComprehend(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StoredListComprehend()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStoredListComprehend(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # StoredListComprehend
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StoredListComprehend
    def PositionRegister(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorProgram.StoredName import StoredName
            obj = StoredName()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StoredListComprehend
    def ListRegister(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorProgram.StoredName import StoredName
            obj = StoredName()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StoredListComprehend
    def ItemVariable(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorProgram.StoredName import StoredName
            obj = StoredName()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StoredListComprehend
    def EndLabel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

def StoredListComprehendStart(builder):
    builder.StartObject(4)

def Start(builder):
    StoredListComprehendStart(builder)

def StoredListComprehendAddPositionRegister(builder, positionRegister):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(positionRegister), 0)

def AddPositionRegister(builder, positionRegister):
    StoredListComprehendAddPositionRegister(builder, positionRegister)

def StoredListComprehendAddListRegister(builder, listRegister):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(listRegister), 0)

def AddListRegister(builder, listRegister):
    StoredListComprehendAddListRegister(builder, listRegister)

def StoredListComprehendAddItemVariable(builder, itemVariable):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(itemVariable), 0)

def AddItemVariable(builder, itemVariable):
    StoredListComprehendAddItemVariable(builder, itemVariable)

def StoredListComprehendAddEndLabel(builder, endLabel):
    builder.PrependUint16Slot(3, endLabel, 0)

def AddEndLabel(builder, endLabel):
    StoredListComprehendAddEndLabel(builder, endLabel)

def StoredListComprehendEnd(builder):
    return builder.EndObject()

def End(builder):
    return StoredListComprehendEnd(builder)
