# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorProgram

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StoredNameDeclPair(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StoredNameDeclPair()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStoredNameDeclPair(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # StoredNameDeclPair
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StoredNameDeclPair
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorProgram.StoredName import StoredName
            obj = StoredName()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StoredNameDeclPair
    def Decl(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorProgram.StoredDecl import StoredDecl
            obj = StoredDecl()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def StoredNameDeclPairStart(builder):
    builder.StartObject(2)

def Start(builder):
    StoredNameDeclPairStart(builder)

def StoredNameDeclPairAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    StoredNameDeclPairAddName(builder, name)

def StoredNameDeclPairAddDecl(builder, decl):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(decl), 0)

def AddDecl(builder, decl):
    StoredNameDeclPairAddDecl(builder, decl)

def StoredNameDeclPairEnd(builder):
    return builder.EndObject()

def End(builder):
    return StoredNameDeclPairEnd(builder)
