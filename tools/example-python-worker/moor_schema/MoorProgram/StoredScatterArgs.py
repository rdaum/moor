# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorProgram

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StoredScatterArgs(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StoredScatterArgs()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStoredScatterArgs(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # StoredScatterArgs
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StoredScatterArgs
    def Labels(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from MoorProgram.StoredScatterLabel import StoredScatterLabel
            obj = StoredScatterLabel()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StoredScatterArgs
    def LabelsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # StoredScatterArgs
    def LabelsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # StoredScatterArgs
    def Done(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

def StoredScatterArgsStart(builder):
    builder.StartObject(2)

def Start(builder):
    StoredScatterArgsStart(builder)

def StoredScatterArgsAddLabels(builder, labels):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(labels), 0)

def AddLabels(builder, labels):
    StoredScatterArgsAddLabels(builder, labels)

def StoredScatterArgsStartLabelsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartLabelsVector(builder, numElems: int) -> int:
    return StoredScatterArgsStartLabelsVector(builder, numElems)

def StoredScatterArgsAddDone(builder, done):
    builder.PrependUint16Slot(1, done, 0)

def AddDone(builder, done):
    StoredScatterArgsAddDone(builder, done)

def StoredScatterArgsEnd(builder):
    return builder.EndObject()

def End(builder):
    return StoredScatterArgsEnd(builder)
