# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorProgram

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StoredScatterOptional(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StoredScatterOptional()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStoredScatterOptional(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # StoredScatterOptional
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StoredScatterOptional
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorProgram.StoredName import StoredName
            obj = StoredName()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StoredScatterOptional
    def DefaultLabel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # StoredScatterOptional
    def HasDefault(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def StoredScatterOptionalStart(builder):
    builder.StartObject(3)

def Start(builder):
    StoredScatterOptionalStart(builder)

def StoredScatterOptionalAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    StoredScatterOptionalAddName(builder, name)

def StoredScatterOptionalAddDefaultLabel(builder, defaultLabel):
    builder.PrependUint16Slot(1, defaultLabel, 0)

def AddDefaultLabel(builder, defaultLabel):
    StoredScatterOptionalAddDefaultLabel(builder, defaultLabel)

def StoredScatterOptionalAddHasDefault(builder, hasDefault):
    builder.PrependBoolSlot(2, hasDefault, 0)

def AddHasDefault(builder, hasDefault):
    StoredScatterOptionalAddHasDefault(builder, hasDefault)

def StoredScatterOptionalEnd(builder):
    return builder.EndObject()

def End(builder):
    return StoredScatterOptionalEnd(builder)
