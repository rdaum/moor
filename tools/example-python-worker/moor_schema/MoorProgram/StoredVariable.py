# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorProgram

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StoredVariable(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StoredVariable()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStoredVariable(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # StoredVariable
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StoredVariable
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # StoredVariable
    def ScopeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # StoredVariable
    def VarNameType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # StoredVariable
    def VarName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def StoredVariableStart(builder):
    builder.StartObject(4)

def Start(builder):
    StoredVariableStart(builder)

def StoredVariableAddId(builder, id):
    builder.PrependUint16Slot(0, id, 0)

def AddId(builder, id):
    StoredVariableAddId(builder, id)

def StoredVariableAddScopeId(builder, scopeId):
    builder.PrependUint16Slot(1, scopeId, 0)

def AddScopeId(builder, scopeId):
    StoredVariableAddScopeId(builder, scopeId)

def StoredVariableAddVarNameType(builder, varNameType):
    builder.PrependUint8Slot(2, varNameType, 0)

def AddVarNameType(builder, varNameType):
    StoredVariableAddVarNameType(builder, varNameType)

def StoredVariableAddVarName(builder, varName):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(varName), 0)

def AddVarName(builder, varName):
    StoredVariableAddVarName(builder, varName)

def StoredVariableEnd(builder):
    return builder.EndObject()

def End(builder):
    return StoredVariableEnd(builder)
