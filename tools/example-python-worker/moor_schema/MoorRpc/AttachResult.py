# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorRpc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AttachResult(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AttachResult()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAttachResult(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AttachResult
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AttachResult
    def Success(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # AttachResult
    def ClientToken(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorRpc.ClientToken import ClientToken
            obj = ClientToken()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # AttachResult
    def Player(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorCommon.Obj import Obj
            obj = Obj()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def AttachResultStart(builder):
    builder.StartObject(3)

def Start(builder):
    AttachResultStart(builder)

def AttachResultAddSuccess(builder, success):
    builder.PrependBoolSlot(0, success, 0)

def AddSuccess(builder, success):
    AttachResultAddSuccess(builder, success)

def AttachResultAddClientToken(builder, clientToken):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(clientToken), 0)

def AddClientToken(builder, clientToken):
    AttachResultAddClientToken(builder, clientToken)

def AttachResultAddPlayer(builder, player):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(player), 0)

def AddPlayer(builder, player):
    AttachResultAddPlayer(builder, player)

def AttachResultEnd(builder):
    return builder.EndObject()

def End(builder):
    return AttachResultEnd(builder)
