# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorRpc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BadSlotName(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BadSlotName()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBadSlotName(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # BadSlotName
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BadSlotName
    def Context(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorRpc.CompileContext import CompileContext
            obj = CompileContext()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # BadSlotName
    def Slot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def BadSlotNameStart(builder):
    builder.StartObject(2)

def Start(builder):
    BadSlotNameStart(builder)

def BadSlotNameAddContext(builder, context):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(context), 0)

def AddContext(builder, context):
    BadSlotNameAddContext(builder, context)

def BadSlotNameAddSlot(builder, slot):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(slot), 0)

def AddSlot(builder, slot):
    BadSlotNameAddSlot(builder, slot)

def BadSlotNameEnd(builder):
    return builder.EndObject()

def End(builder):
    return BadSlotNameEnd(builder)
