# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorRpc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ClientPong(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ClientPong()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsClientPong(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ClientPong
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ClientPong
    def ClientToken(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorRpc.ClientToken import ClientToken
            obj = ClientToken()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ClientPong
    def ClientSysTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # ClientPong
    def Player(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorCommon.Obj import Obj
            obj = Obj()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ClientPong
    def HostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # ClientPong
    def SocketAddr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ClientPongStart(builder):
    builder.StartObject(5)

def Start(builder):
    ClientPongStart(builder)

def ClientPongAddClientToken(builder, clientToken):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(clientToken), 0)

def AddClientToken(builder, clientToken):
    ClientPongAddClientToken(builder, clientToken)

def ClientPongAddClientSysTime(builder, clientSysTime):
    builder.PrependUint64Slot(1, clientSysTime, 0)

def AddClientSysTime(builder, clientSysTime):
    ClientPongAddClientSysTime(builder, clientSysTime)

def ClientPongAddPlayer(builder, player):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(player), 0)

def AddPlayer(builder, player):
    ClientPongAddPlayer(builder, player)

def ClientPongAddHostType(builder, hostType):
    builder.PrependUint8Slot(3, hostType, 0)

def AddHostType(builder, hostType):
    ClientPongAddHostType(builder, hostType)

def ClientPongAddSocketAddr(builder, socketAddr):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(socketAddr), 0)

def AddSocketAddr(builder, socketAddr):
    ClientPongAddSocketAddr(builder, socketAddr)

def ClientPongEnd(builder):
    return builder.EndObject()

def End(builder):
    return ClientPongEnd(builder)
