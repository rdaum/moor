# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorRpc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class HistoricalNarrativeEvent(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = HistoricalNarrativeEvent()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsHistoricalNarrativeEvent(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # HistoricalNarrativeEvent
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # HistoricalNarrativeEvent
    def Event(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorCommon.NarrativeEvent import NarrativeEvent
            obj = NarrativeEvent()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # HistoricalNarrativeEvent
    def IsHistorical(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # HistoricalNarrativeEvent
    def Player(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorCommon.Obj import Obj
            obj = Obj()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def HistoricalNarrativeEventStart(builder):
    builder.StartObject(3)

def Start(builder):
    HistoricalNarrativeEventStart(builder)

def HistoricalNarrativeEventAddEvent(builder, event):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(event), 0)

def AddEvent(builder, event):
    HistoricalNarrativeEventAddEvent(builder, event)

def HistoricalNarrativeEventAddIsHistorical(builder, isHistorical):
    builder.PrependBoolSlot(1, isHistorical, 0)

def AddIsHistorical(builder, isHistorical):
    HistoricalNarrativeEventAddIsHistorical(builder, isHistorical)

def HistoricalNarrativeEventAddPlayer(builder, player):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(player), 0)

def AddPlayer(builder, player):
    HistoricalNarrativeEventAddPlayer(builder, player)

def HistoricalNarrativeEventEnd(builder):
    return builder.EndObject()

def End(builder):
    return HistoricalNarrativeEventEnd(builder)
