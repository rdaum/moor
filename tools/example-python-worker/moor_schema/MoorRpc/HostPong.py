# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorRpc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class HostPong(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = HostPong()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsHostPong(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # HostPong
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # HostPong
    def Timestamp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # HostPong
    def HostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # HostPong
    def Listeners(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from MoorRpc.Listener import Listener
            obj = Listener()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # HostPong
    def ListenersLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # HostPong
    def ListenersIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

def HostPongStart(builder):
    builder.StartObject(3)

def Start(builder):
    HostPongStart(builder)

def HostPongAddTimestamp(builder, timestamp):
    builder.PrependUint64Slot(0, timestamp, 0)

def AddTimestamp(builder, timestamp):
    HostPongAddTimestamp(builder, timestamp)

def HostPongAddHostType(builder, hostType):
    builder.PrependUint8Slot(1, hostType, 0)

def AddHostType(builder, hostType):
    HostPongAddHostType(builder, hostType)

def HostPongAddListeners(builder, listeners):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(listeners), 0)

def AddListeners(builder, listeners):
    HostPongAddListeners(builder, listeners)

def HostPongStartListenersVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartListenersVector(builder, numElems: int) -> int:
    return HostPongStartListenersVector(builder, numElems)

def HostPongEnd(builder):
    return builder.EndObject()

def End(builder):
    return HostPongEnd(builder)
