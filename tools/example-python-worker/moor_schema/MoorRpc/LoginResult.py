# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorRpc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class LoginResult(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LoginResult()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsLoginResult(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # LoginResult
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LoginResult
    def Success(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # LoginResult
    def AuthToken(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorRpc.AuthToken import AuthToken
            obj = AuthToken()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # LoginResult
    def ConnectType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # LoginResult
    def Player(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorCommon.Obj import Obj
            obj = Obj()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def LoginResultStart(builder):
    builder.StartObject(4)

def Start(builder):
    LoginResultStart(builder)

def LoginResultAddSuccess(builder, success):
    builder.PrependBoolSlot(0, success, 0)

def AddSuccess(builder, success):
    LoginResultAddSuccess(builder, success)

def LoginResultAddAuthToken(builder, authToken):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(authToken), 0)

def AddAuthToken(builder, authToken):
    LoginResultAddAuthToken(builder, authToken)

def LoginResultAddConnectType(builder, connectType):
    builder.PrependUint8Slot(2, connectType, 0)

def AddConnectType(builder, connectType):
    LoginResultAddConnectType(builder, connectType)

def LoginResultAddPlayer(builder, player):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(player), 0)

def AddPlayer(builder, player):
    LoginResultAddPlayer(builder, player)

def LoginResultEnd(builder):
    return builder.EndObject()

def End(builder):
    return LoginResultEnd(builder)
