# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorRpc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RequestResult(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RequestResult()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRequestResult(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # RequestResult
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RequestResult
    def Token(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorRpc.WorkerToken import WorkerToken
            obj = WorkerToken()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # RequestResult
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorCommon.Uuid import Uuid
            obj = Uuid()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # RequestResult
    def Result(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorVar.Var import Var
            obj = Var()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def RequestResultStart(builder):
    builder.StartObject(3)

def Start(builder):
    RequestResultStart(builder)

def RequestResultAddToken(builder, token):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(token), 0)

def AddToken(builder, token):
    RequestResultAddToken(builder, token)

def RequestResultAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    RequestResultAddId(builder, id)

def RequestResultAddResult(builder, result):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(result), 0)

def AddResult(builder, result):
    RequestResultAddResult(builder, result)

def RequestResultEnd(builder):
    return builder.EndObject()

def End(builder):
    return RequestResultEnd(builder)
