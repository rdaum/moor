# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorTask

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AbortTime(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AbortTime()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAbortTime(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AbortTime
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AbortTime
    def Seconds(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

def AbortTimeStart(builder):
    builder.StartObject(1)

def Start(builder):
    AbortTimeStart(builder)

def AbortTimeAddSeconds(builder, seconds):
    builder.PrependUint64Slot(0, seconds, 0)

def AddSeconds(builder, seconds):
    AbortTimeAddSeconds(builder, seconds)

def AbortTimeEnd(builder):
    return builder.EndObject()

def End(builder):
    return AbortTimeEnd(builder)
