# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorTask

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Scope(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Scope()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsScope(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Scope
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Scope
    def ScopeType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorTask.ScopeType import ScopeType
            obj = ScopeType()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Scope
    def ValstackPos(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # Scope
    def StartPos(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # Scope
    def EndPos(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # Scope
    def HasEnvironment(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def ScopeStart(builder):
    builder.StartObject(5)

def Start(builder):
    ScopeStart(builder)

def ScopeAddScopeType(builder, scopeType):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(scopeType), 0)

def AddScopeType(builder, scopeType):
    ScopeAddScopeType(builder, scopeType)

def ScopeAddValstackPos(builder, valstackPos):
    builder.PrependUint64Slot(1, valstackPos, 0)

def AddValstackPos(builder, valstackPos):
    ScopeAddValstackPos(builder, valstackPos)

def ScopeAddStartPos(builder, startPos):
    builder.PrependUint64Slot(2, startPos, 0)

def AddStartPos(builder, startPos):
    ScopeAddStartPos(builder, startPos)

def ScopeAddEndPos(builder, endPos):
    builder.PrependUint64Slot(3, endPos, 0)

def AddEndPos(builder, endPos):
    ScopeAddEndPos(builder, endPos)

def ScopeAddHasEnvironment(builder, hasEnvironment):
    builder.PrependBoolSlot(4, hasEnvironment, 0)

def AddHasEnvironment(builder, hasEnvironment):
    ScopeAddHasEnvironment(builder, hasEnvironment)

def ScopeEnd(builder):
    return builder.EndObject()

def End(builder):
    return ScopeEnd(builder)
