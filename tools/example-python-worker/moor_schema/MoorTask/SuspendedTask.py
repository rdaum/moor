# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MoorTask

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SuspendedTask(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SuspendedTask()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSuspendedTask(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SuspendedTask
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SuspendedTask
    def Version(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # SuspendedTask
    def WakeCondition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorTask.WakeCondition import WakeCondition
            obj = WakeCondition()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # SuspendedTask
    def Task(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from MoorTask.Task import Task
            obj = Task()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def SuspendedTaskStart(builder):
    builder.StartObject(3)

def Start(builder):
    SuspendedTaskStart(builder)

def SuspendedTaskAddVersion(builder, version):
    builder.PrependUint16Slot(0, version, 0)

def AddVersion(builder, version):
    SuspendedTaskAddVersion(builder, version)

def SuspendedTaskAddWakeCondition(builder, wakeCondition):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(wakeCondition), 0)

def AddWakeCondition(builder, wakeCondition):
    SuspendedTaskAddWakeCondition(builder, wakeCondition)

def SuspendedTaskAddTask(builder, task):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(task), 0)

def AddTask(builder, task):
    SuspendedTaskAddTask(builder, task)

def SuspendedTaskEnd(builder):
    return builder.EndObject()

def End(builder):
    return SuspendedTaskEnd(builder)
