// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { ErrorCode } from "../moor-common/error-code.js";
import { Symbol } from "../moor-common/symbol.js";
import { Var } from "../moor-var/var.js";

export class Error {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): Error {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsError(bb: flatbuffers.ByteBuffer, obj?: Error): Error {
        return (obj || new Error()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsError(bb: flatbuffers.ByteBuffer, obj?: Error): Error {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new Error()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    errType(): ErrorCode {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? this.bb!.readUint8(this.bb_pos + offset) : ErrorCode.E_NONE;
    }

    msg(): string | null;
    msg(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    msg(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    value(obj?: Var): Var | null {
        const offset = this.bb!.__offset(this.bb_pos, 8);
        return offset ? (obj || new Var()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    customSymbol(obj?: Symbol): Symbol | null {
        const offset = this.bb!.__offset(this.bb_pos, 10);
        return offset ? (obj || new Symbol()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    static startError(builder: flatbuffers.Builder) {
        builder.startObject(4);
    }

    static addErrType(builder: flatbuffers.Builder, errType: ErrorCode) {
        builder.addFieldInt8(0, errType, ErrorCode.E_NONE);
    }

    static addMsg(builder: flatbuffers.Builder, msgOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, msgOffset, 0);
    }

    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {
        builder.addFieldOffset(2, valueOffset, 0);
    }

    static addCustomSymbol(builder: flatbuffers.Builder, customSymbolOffset: flatbuffers.Offset) {
        builder.addFieldOffset(3, customSymbolOffset, 0);
    }

    static endError(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        return offset;
    }
}
