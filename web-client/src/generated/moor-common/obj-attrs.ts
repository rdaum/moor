// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { Obj } from "../moor-common/obj.js";

export class ObjAttrs {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): ObjAttrs {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsObjAttrs(bb: flatbuffers.ByteBuffer, obj?: ObjAttrs): ObjAttrs {
        return (obj || new ObjAttrs()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsObjAttrs(bb: flatbuffers.ByteBuffer, obj?: ObjAttrs): ObjAttrs {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ObjAttrs()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    owner(obj?: Obj): Obj | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? (obj || new Obj()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    parent(obj?: Obj): Obj | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? (obj || new Obj()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    location(obj?: Obj): Obj | null {
        const offset = this.bb!.__offset(this.bb_pos, 8);
        return offset ? (obj || new Obj()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    flags(): number {
        const offset = this.bb!.__offset(this.bb_pos, 10);
        return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
    }

    name(): string | null;
    name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    name(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 12);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    static startObjAttrs(builder: flatbuffers.Builder) {
        builder.startObject(5);
    }

    static addOwner(builder: flatbuffers.Builder, ownerOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, ownerOffset, 0);
    }

    static addParent(builder: flatbuffers.Builder, parentOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, parentOffset, 0);
    }

    static addLocation(builder: flatbuffers.Builder, locationOffset: flatbuffers.Offset) {
        builder.addFieldOffset(2, locationOffset, 0);
    }

    static addFlags(builder: flatbuffers.Builder, flags: number) {
        builder.addFieldInt16(3, flags, 0);
    }

    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {
        builder.addFieldOffset(4, nameOffset, 0);
    }

    static endObjAttrs(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // owner
        builder.requiredField(offset, 6); // parent
        builder.requiredField(offset, 8); // location
        return offset;
    }
}
