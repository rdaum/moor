// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ObjectRef } from '../moor-common/object-ref.js';


export class ObjectNotFound {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ObjectNotFound {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsObjectNotFound(bb:flatbuffers.ByteBuffer, obj?:ObjectNotFound):ObjectNotFound {
  return (obj || new ObjectNotFound()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsObjectNotFound(bb:flatbuffers.ByteBuffer, obj?:ObjectNotFound):ObjectNotFound {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ObjectNotFound()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

objectRef(obj?:ObjectRef):ObjectRef|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ObjectRef()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startObjectNotFound(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addObjectRef(builder:flatbuffers.Builder, objectRefOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, objectRefOffset, 0);
}

static endObjectNotFound(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // object_ref
  return offset;
}

static createObjectNotFound(builder:flatbuffers.Builder, objectRefOffset:flatbuffers.Offset):flatbuffers.Offset {
  ObjectNotFound.startObjectNotFound(builder);
  ObjectNotFound.addObjectRef(builder, objectRefOffset);
  return ObjectNotFound.endObjectNotFound(builder);
}
}
