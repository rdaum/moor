// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Presentation } from '../moor-common/presentation.js';


export class PresentEvent {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PresentEvent {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPresentEvent(bb:flatbuffers.ByteBuffer, obj?:PresentEvent):PresentEvent {
  return (obj || new PresentEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPresentEvent(bb:flatbuffers.ByteBuffer, obj?:PresentEvent):PresentEvent {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PresentEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

presentation(obj?:Presentation):Presentation|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Presentation()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startPresentEvent(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addPresentation(builder:flatbuffers.Builder, presentationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, presentationOffset, 0);
}

static endPresentEvent(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // presentation
  return offset;
}

static createPresentEvent(builder:flatbuffers.Builder, presentationOffset:flatbuffers.Offset):flatbuffers.Offset {
  PresentEvent.startPresentEvent(builder);
  PresentEvent.addPresentation(builder, presentationOffset);
  return PresentEvent.endPresentEvent(builder);
}
}
