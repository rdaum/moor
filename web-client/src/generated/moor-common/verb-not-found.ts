// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { Obj } from "../moor-common/obj.js";

export class VerbNotFound {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): VerbNotFound {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsVerbNotFound(bb: flatbuffers.ByteBuffer, obj?: VerbNotFound): VerbNotFound {
        return (obj || new VerbNotFound()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsVerbNotFound(bb: flatbuffers.ByteBuffer, obj?: VerbNotFound): VerbNotFound {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new VerbNotFound()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    obj(obj?: Obj): Obj | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? (obj || new Obj()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    verb(): string | null;
    verb(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    verb(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    static startVerbNotFound(builder: flatbuffers.Builder) {
        builder.startObject(2);
    }

    static addObj(builder: flatbuffers.Builder, objOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, objOffset, 0);
    }

    static addVerb(builder: flatbuffers.Builder, verbOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, verbOffset, 0);
    }

    static endVerbNotFound(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // obj
        builder.requiredField(offset, 6); // verb
        return offset;
    }

    static createVerbNotFound(
        builder: flatbuffers.Builder,
        objOffset: flatbuffers.Offset,
        verbOffset: flatbuffers.Offset,
    ): flatbuffers.Offset {
        VerbNotFound.startVerbNotFound(builder);
        VerbNotFound.addObj(builder, objOffset);
        VerbNotFound.addVerb(builder, verbOffset);
        return VerbNotFound.endVerbNotFound(builder);
    }
}
