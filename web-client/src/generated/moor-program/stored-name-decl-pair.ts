// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { StoredDecl } from "../moor-program/stored-decl.js";
import { StoredName } from "../moor-program/stored-name.js";

export class StoredNameDeclPair {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): StoredNameDeclPair {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsStoredNameDeclPair(bb: flatbuffers.ByteBuffer, obj?: StoredNameDeclPair): StoredNameDeclPair {
        return (obj || new StoredNameDeclPair()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsStoredNameDeclPair(
        bb: flatbuffers.ByteBuffer,
        obj?: StoredNameDeclPair,
    ): StoredNameDeclPair {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new StoredNameDeclPair()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    name(obj?: StoredName): StoredName | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? (obj || new StoredName()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    decl(obj?: StoredDecl): StoredDecl | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? (obj || new StoredDecl()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    static startStoredNameDeclPair(builder: flatbuffers.Builder) {
        builder.startObject(2);
    }

    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, nameOffset, 0);
    }

    static addDecl(builder: flatbuffers.Builder, declOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, declOffset, 0);
    }

    static endStoredNameDeclPair(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // name
        builder.requiredField(offset, 6); // decl
        return offset;
    }
}
