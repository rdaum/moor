// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { StoredName } from "../moor-program/stored-name.js";

export class StoredRangeComprehend {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): StoredRangeComprehend {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsStoredRangeComprehend(
        bb: flatbuffers.ByteBuffer,
        obj?: StoredRangeComprehend,
    ): StoredRangeComprehend {
        return (obj || new StoredRangeComprehend()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsStoredRangeComprehend(
        bb: flatbuffers.ByteBuffer,
        obj?: StoredRangeComprehend,
    ): StoredRangeComprehend {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new StoredRangeComprehend()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    position(obj?: StoredName): StoredName | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? (obj || new StoredName()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    endOfRangeRegister(obj?: StoredName): StoredName | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? (obj || new StoredName()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    endLabel(): number {
        const offset = this.bb!.__offset(this.bb_pos, 8);
        return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
    }

    static startStoredRangeComprehend(builder: flatbuffers.Builder) {
        builder.startObject(3);
    }

    static addPosition(builder: flatbuffers.Builder, positionOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, positionOffset, 0);
    }

    static addEndOfRangeRegister(builder: flatbuffers.Builder, endOfRangeRegisterOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, endOfRangeRegisterOffset, 0);
    }

    static addEndLabel(builder: flatbuffers.Builder, endLabel: number) {
        builder.addFieldInt16(2, endLabel, 0);
    }

    static endStoredRangeComprehend(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // position
        builder.requiredField(offset, 6); // end_of_range_register
        return offset;
    }
}
