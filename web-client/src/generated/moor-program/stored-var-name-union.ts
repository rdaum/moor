// automatically generated by the FlatBuffers compiler, do not modify

import { StoredNamedVar } from '../moor-program/stored-named-var.js';
import { StoredRegisterVar } from '../moor-program/stored-register-var.js';


export enum StoredVarNameUnion {
  NONE = 0,
  StoredNamedVar = 1,
  StoredRegisterVar = 2
}

export function unionToStoredVarNameUnion(
  type: StoredVarNameUnion,
  accessor: (obj:StoredNamedVar|StoredRegisterVar) => StoredNamedVar|StoredRegisterVar|null
): StoredNamedVar|StoredRegisterVar|null {
  switch(StoredVarNameUnion[type]) {
    case 'NONE': return null; 
    case 'StoredNamedVar': return accessor(new StoredNamedVar())! as StoredNamedVar;
    case 'StoredRegisterVar': return accessor(new StoredRegisterVar())! as StoredRegisterVar;
    default: return null;
  }
}

export function unionListToStoredVarNameUnion(
  type: StoredVarNameUnion, 
  accessor: (index: number, obj:StoredNamedVar|StoredRegisterVar) => StoredNamedVar|StoredRegisterVar|null, 
  index: number
): StoredNamedVar|StoredRegisterVar|null {
  switch(StoredVarNameUnion[type]) {
    case 'NONE': return null; 
    case 'StoredNamedVar': return accessor(index, new StoredNamedVar())! as StoredNamedVar;
    case 'StoredRegisterVar': return accessor(index, new StoredRegisterVar())! as StoredRegisterVar;
    default: return null;
  }
}
