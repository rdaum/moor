// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ClientEventUnion, unionToClientEventUnion, unionListToClientEventUnion } from '../moor-rpc/client-event-union.js';


export class ClientEvent {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ClientEvent {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsClientEvent(bb:flatbuffers.ByteBuffer, obj?:ClientEvent):ClientEvent {
  return (obj || new ClientEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsClientEvent(bb:flatbuffers.ByteBuffer, obj?:ClientEvent):ClientEvent {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ClientEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

eventType():ClientEventUnion {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ClientEventUnion.NONE;
}

event<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startClientEvent(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addEventType(builder:flatbuffers.Builder, eventType:ClientEventUnion) {
  builder.addFieldInt8(0, eventType, ClientEventUnion.NONE);
}

static addEvent(builder:flatbuffers.Builder, eventOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, eventOffset, 0);
}

static endClientEvent(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 6) // event
  return offset;
}

static createClientEvent(builder:flatbuffers.Builder, eventType:ClientEventUnion, eventOffset:flatbuffers.Offset):flatbuffers.Offset {
  ClientEvent.startClientEvent(builder);
  ClientEvent.addEventType(builder, eventType);
  ClientEvent.addEvent(builder, eventOffset);
  return ClientEvent.endClientEvent(builder);
}
}
