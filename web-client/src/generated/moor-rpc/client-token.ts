// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class ClientToken {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ClientToken {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsClientToken(bb:flatbuffers.ByteBuffer, obj?:ClientToken):ClientToken {
  return (obj || new ClientToken()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsClientToken(bb:flatbuffers.ByteBuffer, obj?:ClientToken):ClientToken {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ClientToken()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

token():string|null
token(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
token(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startClientToken(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addToken(builder:flatbuffers.Builder, tokenOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, tokenOffset, 0);
}

static endClientToken(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // token
  return offset;
}

static createClientToken(builder:flatbuffers.Builder, tokenOffset:flatbuffers.Offset):flatbuffers.Offset {
  ClientToken.startClientToken(builder);
  ClientToken.addToken(builder, tokenOffset);
  return ClientToken.endClientToken(builder);
}
}
