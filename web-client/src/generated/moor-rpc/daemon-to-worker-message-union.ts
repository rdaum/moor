// automatically generated by the FlatBuffers compiler, do not modify

import { PingWorkers } from "../moor-rpc/ping-workers.js";
import { PleaseDie } from "../moor-rpc/please-die.js";
import { WorkerRequest } from "../moor-rpc/worker-request.js";

export enum DaemonToWorkerMessageUnion {
    NONE = 0,
    PingWorkers = 1,
    WorkerRequest = 2,
    PleaseDie = 3,
}

export function unionToDaemonToWorkerMessageUnion(
    type: DaemonToWorkerMessageUnion,
    accessor: (obj: PingWorkers | PleaseDie | WorkerRequest) => PingWorkers | PleaseDie | WorkerRequest | null,
): PingWorkers | PleaseDie | WorkerRequest | null {
    switch (DaemonToWorkerMessageUnion[type]) {
        case "NONE":
            return null;
        case "PingWorkers":
            return accessor(new PingWorkers())! as PingWorkers;
        case "WorkerRequest":
            return accessor(new WorkerRequest())! as WorkerRequest;
        case "PleaseDie":
            return accessor(new PleaseDie())! as PleaseDie;
        default:
            return null;
    }
}

export function unionListToDaemonToWorkerMessageUnion(
    type: DaemonToWorkerMessageUnion,
    accessor: (
        index: number,
        obj: PingWorkers | PleaseDie | WorkerRequest,
    ) => PingWorkers | PleaseDie | WorkerRequest | null,
    index: number,
): PingWorkers | PleaseDie | WorkerRequest | null {
    switch (DaemonToWorkerMessageUnion[type]) {
        case "NONE":
            return null;
        case "PingWorkers":
            return accessor(index, new PingWorkers())! as PingWorkers;
        case "WorkerRequest":
            return accessor(index, new WorkerRequest())! as WorkerRequest;
        case "PleaseDie":
            return accessor(index, new PleaseDie())! as PleaseDie;
        default:
            return null;
    }
}
