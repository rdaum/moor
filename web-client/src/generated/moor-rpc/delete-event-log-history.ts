// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { AuthToken } from "../moor-rpc/auth-token.js";
import { ClientToken } from "../moor-rpc/client-token.js";

export class DeleteEventLogHistory {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): DeleteEventLogHistory {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsDeleteEventLogHistory(
        bb: flatbuffers.ByteBuffer,
        obj?: DeleteEventLogHistory,
    ): DeleteEventLogHistory {
        return (obj || new DeleteEventLogHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsDeleteEventLogHistory(
        bb: flatbuffers.ByteBuffer,
        obj?: DeleteEventLogHistory,
    ): DeleteEventLogHistory {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new DeleteEventLogHistory()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    clientToken(obj?: ClientToken): ClientToken | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? (obj || new ClientToken()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    authToken(obj?: AuthToken): AuthToken | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? (obj || new AuthToken()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    static startDeleteEventLogHistory(builder: flatbuffers.Builder) {
        builder.startObject(2);
    }

    static addClientToken(builder: flatbuffers.Builder, clientTokenOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, clientTokenOffset, 0);
    }

    static addAuthToken(builder: flatbuffers.Builder, authTokenOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, authTokenOffset, 0);
    }

    static endDeleteEventLogHistory(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // client_token
        builder.requiredField(offset, 6); // auth_token
        return offset;
    }
}
