// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

export class EnrollmentRequest {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): EnrollmentRequest {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsEnrollmentRequest(bb: flatbuffers.ByteBuffer, obj?: EnrollmentRequest): EnrollmentRequest {
        return (obj || new EnrollmentRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsEnrollmentRequest(
        bb: flatbuffers.ByteBuffer,
        obj?: EnrollmentRequest,
    ): EnrollmentRequest {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new EnrollmentRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    enrollmentToken(): string | null;
    enrollmentToken(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    enrollmentToken(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    curvePublicKey(): string | null;
    curvePublicKey(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    curvePublicKey(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    serviceType(): string | null;
    serviceType(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    serviceType(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 8);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    hostname(): string | null;
    hostname(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    hostname(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 10);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    static startEnrollmentRequest(builder: flatbuffers.Builder) {
        builder.startObject(4);
    }

    static addEnrollmentToken(builder: flatbuffers.Builder, enrollmentTokenOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, enrollmentTokenOffset, 0);
    }

    static addCurvePublicKey(builder: flatbuffers.Builder, curvePublicKeyOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, curvePublicKeyOffset, 0);
    }

    static addServiceType(builder: flatbuffers.Builder, serviceTypeOffset: flatbuffers.Offset) {
        builder.addFieldOffset(2, serviceTypeOffset, 0);
    }

    static addHostname(builder: flatbuffers.Builder, hostnameOffset: flatbuffers.Offset) {
        builder.addFieldOffset(3, hostnameOffset, 0);
    }

    static endEnrollmentRequest(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // enrollment_token
        builder.requiredField(offset, 6); // curve_public_key
        builder.requiredField(offset, 8); // service_type
        builder.requiredField(offset, 10); // hostname
        return offset;
    }

    static createEnrollmentRequest(
        builder: flatbuffers.Builder,
        enrollmentTokenOffset: flatbuffers.Offset,
        curvePublicKeyOffset: flatbuffers.Offset,
        serviceTypeOffset: flatbuffers.Offset,
        hostnameOffset: flatbuffers.Offset,
    ): flatbuffers.Offset {
        EnrollmentRequest.startEnrollmentRequest(builder);
        EnrollmentRequest.addEnrollmentToken(builder, enrollmentTokenOffset);
        EnrollmentRequest.addCurvePublicKey(builder, curvePublicKeyOffset);
        EnrollmentRequest.addServiceType(builder, serviceTypeOffset);
        EnrollmentRequest.addHostname(builder, hostnameOffset);
        return EnrollmentRequest.endEnrollmentRequest(builder);
    }
}
