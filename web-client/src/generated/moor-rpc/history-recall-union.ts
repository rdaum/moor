// automatically generated by the FlatBuffers compiler, do not modify

import { HistoryRecallNone } from "../moor-rpc/history-recall-none.js";
import { HistoryRecallSinceEvent } from "../moor-rpc/history-recall-since-event.js";
import { HistoryRecallSinceSeconds } from "../moor-rpc/history-recall-since-seconds.js";
import { HistoryRecallUntilEvent } from "../moor-rpc/history-recall-until-event.js";

export enum HistoryRecallUnion {
    NONE = 0,
    HistoryRecallSinceEvent = 1,
    HistoryRecallUntilEvent = 2,
    HistoryRecallSinceSeconds = 3,
    HistoryRecallNone = 4,
}

export function unionToHistoryRecallUnion(
    type: HistoryRecallUnion,
    accessor: (
        obj: HistoryRecallNone | HistoryRecallSinceEvent | HistoryRecallSinceSeconds | HistoryRecallUntilEvent,
    ) => HistoryRecallNone | HistoryRecallSinceEvent | HistoryRecallSinceSeconds | HistoryRecallUntilEvent | null,
): HistoryRecallNone | HistoryRecallSinceEvent | HistoryRecallSinceSeconds | HistoryRecallUntilEvent | null {
    switch (HistoryRecallUnion[type]) {
        case "NONE":
            return null;
        case "HistoryRecallSinceEvent":
            return accessor(new HistoryRecallSinceEvent())! as HistoryRecallSinceEvent;
        case "HistoryRecallUntilEvent":
            return accessor(new HistoryRecallUntilEvent())! as HistoryRecallUntilEvent;
        case "HistoryRecallSinceSeconds":
            return accessor(new HistoryRecallSinceSeconds())! as HistoryRecallSinceSeconds;
        case "HistoryRecallNone":
            return accessor(new HistoryRecallNone())! as HistoryRecallNone;
        default:
            return null;
    }
}

export function unionListToHistoryRecallUnion(
    type: HistoryRecallUnion,
    accessor: (
        index: number,
        obj: HistoryRecallNone | HistoryRecallSinceEvent | HistoryRecallSinceSeconds | HistoryRecallUntilEvent,
    ) => HistoryRecallNone | HistoryRecallSinceEvent | HistoryRecallSinceSeconds | HistoryRecallUntilEvent | null,
    index: number,
): HistoryRecallNone | HistoryRecallSinceEvent | HistoryRecallSinceSeconds | HistoryRecallUntilEvent | null {
    switch (HistoryRecallUnion[type]) {
        case "NONE":
            return null;
        case "HistoryRecallSinceEvent":
            return accessor(index, new HistoryRecallSinceEvent())! as HistoryRecallSinceEvent;
        case "HistoryRecallUntilEvent":
            return accessor(index, new HistoryRecallUntilEvent())! as HistoryRecallUntilEvent;
        case "HistoryRecallSinceSeconds":
            return accessor(index, new HistoryRecallSinceSeconds())! as HistoryRecallSinceSeconds;
        case "HistoryRecallNone":
            return accessor(index, new HistoryRecallNone())! as HistoryRecallNone;
        default:
            return null;
    }
}
