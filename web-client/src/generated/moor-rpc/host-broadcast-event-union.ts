// automatically generated by the FlatBuffers compiler, do not modify

import { HostBroadcastListen } from "../moor-rpc/host-broadcast-listen.js";
import { HostBroadcastPingPong } from "../moor-rpc/host-broadcast-ping-pong.js";
import { HostBroadcastUnlisten } from "../moor-rpc/host-broadcast-unlisten.js";

export enum HostBroadcastEventUnion {
    NONE = 0,
    HostBroadcastListen = 1,
    HostBroadcastUnlisten = 2,
    HostBroadcastPingPong = 3,
}

export function unionToHostBroadcastEventUnion(
    type: HostBroadcastEventUnion,
    accessor: (
        obj: HostBroadcastListen | HostBroadcastPingPong | HostBroadcastUnlisten,
    ) => HostBroadcastListen | HostBroadcastPingPong | HostBroadcastUnlisten | null,
): HostBroadcastListen | HostBroadcastPingPong | HostBroadcastUnlisten | null {
    switch (HostBroadcastEventUnion[type]) {
        case "NONE":
            return null;
        case "HostBroadcastListen":
            return accessor(new HostBroadcastListen())! as HostBroadcastListen;
        case "HostBroadcastUnlisten":
            return accessor(new HostBroadcastUnlisten())! as HostBroadcastUnlisten;
        case "HostBroadcastPingPong":
            return accessor(new HostBroadcastPingPong())! as HostBroadcastPingPong;
        default:
            return null;
    }
}

export function unionListToHostBroadcastEventUnion(
    type: HostBroadcastEventUnion,
    accessor: (
        index: number,
        obj: HostBroadcastListen | HostBroadcastPingPong | HostBroadcastUnlisten,
    ) => HostBroadcastListen | HostBroadcastPingPong | HostBroadcastUnlisten | null,
    index: number,
): HostBroadcastListen | HostBroadcastPingPong | HostBroadcastUnlisten | null {
    switch (HostBroadcastEventUnion[type]) {
        case "NONE":
            return null;
        case "HostBroadcastListen":
            return accessor(index, new HostBroadcastListen())! as HostBroadcastListen;
        case "HostBroadcastUnlisten":
            return accessor(index, new HostBroadcastUnlisten())! as HostBroadcastUnlisten;
        case "HostBroadcastPingPong":
            return accessor(index, new HostBroadcastPingPong())! as HostBroadcastPingPong;
        default:
            return null;
    }
}
