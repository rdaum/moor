// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { DaemonToHostReply } from "../moor-rpc/daemon-to-host-reply.js";

export class HostSuccess {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): HostSuccess {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsHostSuccess(bb: flatbuffers.ByteBuffer, obj?: HostSuccess): HostSuccess {
        return (obj || new HostSuccess()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsHostSuccess(bb: flatbuffers.ByteBuffer, obj?: HostSuccess): HostSuccess {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new HostSuccess()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    reply(obj?: DaemonToHostReply): DaemonToHostReply | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset
            ? (obj || new DaemonToHostReply()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!)
            : null;
    }

    static startHostSuccess(builder: flatbuffers.Builder) {
        builder.startObject(1);
    }

    static addReply(builder: flatbuffers.Builder, replyOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, replyOffset, 0);
    }

    static endHostSuccess(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // reply
        return offset;
    }

    static createHostSuccess(builder: flatbuffers.Builder, replyOffset: flatbuffers.Offset): flatbuffers.Offset {
        HostSuccess.startHostSuccess(builder);
        HostSuccess.addReply(builder, replyOffset);
        return HostSuccess.endHostSuccess(builder);
    }
}
