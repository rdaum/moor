// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { HostToDaemonMessage } from "../moor-rpc/host-to-daemon-message.js";
import { HostToken } from "../moor-rpc/host-token.js";

export class HostToDaemonMsg {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): HostToDaemonMsg {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsHostToDaemonMsg(bb: flatbuffers.ByteBuffer, obj?: HostToDaemonMsg): HostToDaemonMsg {
        return (obj || new HostToDaemonMsg()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsHostToDaemonMsg(bb: flatbuffers.ByteBuffer, obj?: HostToDaemonMsg): HostToDaemonMsg {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new HostToDaemonMsg()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    hostToken(obj?: HostToken): HostToken | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? (obj || new HostToken()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    message(obj?: HostToDaemonMessage): HostToDaemonMessage | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset
            ? (obj || new HostToDaemonMessage()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!)
            : null;
    }

    static startHostToDaemonMsg(builder: flatbuffers.Builder) {
        builder.startObject(2);
    }

    static addHostToken(builder: flatbuffers.Builder, hostTokenOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, hostTokenOffset, 0);
    }

    static addMessage(builder: flatbuffers.Builder, messageOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, messageOffset, 0);
    }

    static endHostToDaemonMsg(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // host_token
        builder.requiredField(offset, 6); // message
        return offset;
    }
}
