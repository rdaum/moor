// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

export class HostToken {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): HostToken {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsHostToken(bb: flatbuffers.ByteBuffer, obj?: HostToken): HostToken {
        return (obj || new HostToken()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsHostToken(bb: flatbuffers.ByteBuffer, obj?: HostToken): HostToken {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new HostToken()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    token(): string | null;
    token(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    token(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    static startHostToken(builder: flatbuffers.Builder) {
        builder.startObject(1);
    }

    static addToken(builder: flatbuffers.Builder, tokenOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, tokenOffset, 0);
    }

    static endHostToken(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // token
        return offset;
    }

    static createHostToken(builder: flatbuffers.Builder, tokenOffset: flatbuffers.Offset): flatbuffers.Offset {
        HostToken.startHostToken(builder);
        HostToken.addToken(builder, tokenOffset);
        return HostToken.endHostToken(builder);
    }
}
