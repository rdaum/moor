// automatically generated by the FlatBuffers compiler, do not modify

import { HostClientToDaemonMsg } from "../moor-rpc/host-client-to-daemon-msg.js";
import { HostToDaemonMsg } from "../moor-rpc/host-to-daemon-msg.js";

export enum MessageTypeUnion {
    NONE = 0,
    HostToDaemonMsg = 1,
    HostClientToDaemonMsg = 2,
}

export function unionToMessageTypeUnion(
    type: MessageTypeUnion,
    accessor: (obj: HostClientToDaemonMsg | HostToDaemonMsg) => HostClientToDaemonMsg | HostToDaemonMsg | null,
): HostClientToDaemonMsg | HostToDaemonMsg | null {
    switch (MessageTypeUnion[type]) {
        case "NONE":
            return null;
        case "HostToDaemonMsg":
            return accessor(new HostToDaemonMsg())! as HostToDaemonMsg;
        case "HostClientToDaemonMsg":
            return accessor(new HostClientToDaemonMsg())! as HostClientToDaemonMsg;
        default:
            return null;
    }
}

export function unionListToMessageTypeUnion(
    type: MessageTypeUnion,
    accessor: (
        index: number,
        obj: HostClientToDaemonMsg | HostToDaemonMsg,
    ) => HostClientToDaemonMsg | HostToDaemonMsg | null,
    index: number,
): HostClientToDaemonMsg | HostToDaemonMsg | null {
    switch (MessageTypeUnion[type]) {
        case "NONE":
            return null;
        case "HostToDaemonMsg":
            return accessor(index, new HostToDaemonMsg())! as HostToDaemonMsg;
        case "HostClientToDaemonMsg":
            return accessor(index, new HostClientToDaemonMsg())! as HostClientToDaemonMsg;
        default:
            return null;
    }
}
