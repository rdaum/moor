// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Obj } from '../moor-common/obj.js';
import { AuthToken } from '../moor-rpc/auth-token.js';
import { ClientToken } from '../moor-rpc/client-token.js';


export class OutOfBand {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):OutOfBand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsOutOfBand(bb:flatbuffers.ByteBuffer, obj?:OutOfBand):OutOfBand {
  return (obj || new OutOfBand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsOutOfBand(bb:flatbuffers.ByteBuffer, obj?:OutOfBand):OutOfBand {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new OutOfBand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

clientToken(obj?:ClientToken):ClientToken|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ClientToken()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

authToken(obj?:AuthToken):AuthToken|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new AuthToken()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

handlerObject(obj?:Obj):Obj|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Obj()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

command():string|null
command(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
command(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startOutOfBand(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addClientToken(builder:flatbuffers.Builder, clientTokenOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, clientTokenOffset, 0);
}

static addAuthToken(builder:flatbuffers.Builder, authTokenOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, authTokenOffset, 0);
}

static addHandlerObject(builder:flatbuffers.Builder, handlerObjectOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, handlerObjectOffset, 0);
}

static addCommand(builder:flatbuffers.Builder, commandOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, commandOffset, 0);
}

static endOutOfBand(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // client_token
  builder.requiredField(offset, 6) // auth_token
  builder.requiredField(offset, 8) // handler_object
  builder.requiredField(offset, 10) // command
  return offset;
}

}
