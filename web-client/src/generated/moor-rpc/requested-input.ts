// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { Uuid } from "../moor-common/uuid.js";
import { AuthToken } from "../moor-rpc/auth-token.js";
import { ClientToken } from "../moor-rpc/client-token.js";
import { Var } from "../moor-var/var.js";

export class RequestedInput {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): RequestedInput {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsRequestedInput(bb: flatbuffers.ByteBuffer, obj?: RequestedInput): RequestedInput {
        return (obj || new RequestedInput()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsRequestedInput(bb: flatbuffers.ByteBuffer, obj?: RequestedInput): RequestedInput {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new RequestedInput()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    clientToken(obj?: ClientToken): ClientToken | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? (obj || new ClientToken()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    authToken(obj?: AuthToken): AuthToken | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? (obj || new AuthToken()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    requestId(obj?: Uuid): Uuid | null {
        const offset = this.bb!.__offset(this.bb_pos, 8);
        return offset ? (obj || new Uuid()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    input(obj?: Var): Var | null {
        const offset = this.bb!.__offset(this.bb_pos, 10);
        return offset ? (obj || new Var()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    static startRequestedInput(builder: flatbuffers.Builder) {
        builder.startObject(4);
    }

    static addClientToken(builder: flatbuffers.Builder, clientTokenOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, clientTokenOffset, 0);
    }

    static addAuthToken(builder: flatbuffers.Builder, authTokenOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, authTokenOffset, 0);
    }

    static addRequestId(builder: flatbuffers.Builder, requestIdOffset: flatbuffers.Offset) {
        builder.addFieldOffset(2, requestIdOffset, 0);
    }

    static addInput(builder: flatbuffers.Builder, inputOffset: flatbuffers.Offset) {
        builder.addFieldOffset(3, inputOffset, 0);
    }

    static endRequestedInput(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // client_token
        builder.requiredField(offset, 6); // auth_token
        builder.requiredField(offset, 8); // request_id
        builder.requiredField(offset, 10); // input
        return offset;
    }
}
