// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

export class ServerFeatures {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): ServerFeatures {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsServerFeatures(bb: flatbuffers.ByteBuffer, obj?: ServerFeatures): ServerFeatures {
        return (obj || new ServerFeatures()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsServerFeatures(bb: flatbuffers.ByteBuffer, obj?: ServerFeatures): ServerFeatures {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ServerFeatures()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    persistentTasks(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    richNotify(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    lexicalScopes(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 8);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    typeDispatch(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 10);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    flyweightType(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 12);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    listComprehensions(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 14);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    boolType(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 16);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    useBooleanReturns(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 18);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    symbolType(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 20);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    useSymbolsInBuiltins(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 22);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    customErrors(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 24);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    useUuobjids(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 26);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    enableEventlog(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 28);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    anonymousObjects(): boolean {
        const offset = this.bb!.__offset(this.bb_pos, 30);
        return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    static startServerFeatures(builder: flatbuffers.Builder) {
        builder.startObject(14);
    }

    static addPersistentTasks(builder: flatbuffers.Builder, persistentTasks: boolean) {
        builder.addFieldInt8(0, +persistentTasks, +false);
    }

    static addRichNotify(builder: flatbuffers.Builder, richNotify: boolean) {
        builder.addFieldInt8(1, +richNotify, +false);
    }

    static addLexicalScopes(builder: flatbuffers.Builder, lexicalScopes: boolean) {
        builder.addFieldInt8(2, +lexicalScopes, +false);
    }

    static addTypeDispatch(builder: flatbuffers.Builder, typeDispatch: boolean) {
        builder.addFieldInt8(3, +typeDispatch, +false);
    }

    static addFlyweightType(builder: flatbuffers.Builder, flyweightType: boolean) {
        builder.addFieldInt8(4, +flyweightType, +false);
    }

    static addListComprehensions(builder: flatbuffers.Builder, listComprehensions: boolean) {
        builder.addFieldInt8(5, +listComprehensions, +false);
    }

    static addBoolType(builder: flatbuffers.Builder, boolType: boolean) {
        builder.addFieldInt8(6, +boolType, +false);
    }

    static addUseBooleanReturns(builder: flatbuffers.Builder, useBooleanReturns: boolean) {
        builder.addFieldInt8(7, +useBooleanReturns, +false);
    }

    static addSymbolType(builder: flatbuffers.Builder, symbolType: boolean) {
        builder.addFieldInt8(8, +symbolType, +false);
    }

    static addUseSymbolsInBuiltins(builder: flatbuffers.Builder, useSymbolsInBuiltins: boolean) {
        builder.addFieldInt8(9, +useSymbolsInBuiltins, +false);
    }

    static addCustomErrors(builder: flatbuffers.Builder, customErrors: boolean) {
        builder.addFieldInt8(10, +customErrors, +false);
    }

    static addUseUuobjids(builder: flatbuffers.Builder, useUuobjids: boolean) {
        builder.addFieldInt8(11, +useUuobjids, +false);
    }

    static addEnableEventlog(builder: flatbuffers.Builder, enableEventlog: boolean) {
        builder.addFieldInt8(12, +enableEventlog, +false);
    }

    static addAnonymousObjects(builder: flatbuffers.Builder, anonymousObjects: boolean) {
        builder.addFieldInt8(13, +anonymousObjects, +false);
    }

    static endServerFeatures(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        return offset;
    }

    static createServerFeatures(
        builder: flatbuffers.Builder,
        persistentTasks: boolean,
        richNotify: boolean,
        lexicalScopes: boolean,
        typeDispatch: boolean,
        flyweightType: boolean,
        listComprehensions: boolean,
        boolType: boolean,
        useBooleanReturns: boolean,
        symbolType: boolean,
        useSymbolsInBuiltins: boolean,
        customErrors: boolean,
        useUuobjids: boolean,
        enableEventlog: boolean,
        anonymousObjects: boolean,
    ): flatbuffers.Offset {
        ServerFeatures.startServerFeatures(builder);
        ServerFeatures.addPersistentTasks(builder, persistentTasks);
        ServerFeatures.addRichNotify(builder, richNotify);
        ServerFeatures.addLexicalScopes(builder, lexicalScopes);
        ServerFeatures.addTypeDispatch(builder, typeDispatch);
        ServerFeatures.addFlyweightType(builder, flyweightType);
        ServerFeatures.addListComprehensions(builder, listComprehensions);
        ServerFeatures.addBoolType(builder, boolType);
        ServerFeatures.addUseBooleanReturns(builder, useBooleanReturns);
        ServerFeatures.addSymbolType(builder, symbolType);
        ServerFeatures.addUseSymbolsInBuiltins(builder, useSymbolsInBuiltins);
        ServerFeatures.addCustomErrors(builder, customErrors);
        ServerFeatures.addUseUuobjids(builder, useUuobjids);
        ServerFeatures.addEnableEventlog(builder, enableEventlog);
        ServerFeatures.addAnonymousObjects(builder, anonymousObjects);
        return ServerFeatures.endServerFeatures(builder);
    }
}
