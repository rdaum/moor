// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { SchedulerError } from "../moor-rpc/scheduler-error.js";

export class SystemHandlerError {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): SystemHandlerError {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsSystemHandlerError(bb: flatbuffers.ByteBuffer, obj?: SystemHandlerError): SystemHandlerError {
        return (obj || new SystemHandlerError()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsSystemHandlerError(
        bb: flatbuffers.ByteBuffer,
        obj?: SystemHandlerError,
    ): SystemHandlerError {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new SystemHandlerError()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    error(obj?: SchedulerError): SchedulerError | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset
            ? (obj || new SchedulerError()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!)
            : null;
    }

    static startSystemHandlerError(builder: flatbuffers.Builder) {
        builder.startObject(1);
    }

    static addError(builder: flatbuffers.Builder, errorOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, errorOffset, 0);
    }

    static endSystemHandlerError(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // error
        return offset;
    }

    static createSystemHandlerError(builder: flatbuffers.Builder, errorOffset: flatbuffers.Offset): flatbuffers.Offset {
        SystemHandlerError.startSystemHandlerError(builder);
        SystemHandlerError.addError(builder, errorOffset);
        return SystemHandlerError.endSystemHandlerError(builder);
    }
}
