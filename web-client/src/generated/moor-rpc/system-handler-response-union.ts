// automatically generated by the FlatBuffers compiler, do not modify

import { SystemHandlerError } from '../moor-rpc/system-handler-error.js';
import { SystemHandlerSuccess } from '../moor-rpc/system-handler-success.js';


export enum SystemHandlerResponseUnion {
  NONE = 0,
  SystemHandlerSuccess = 1,
  SystemHandlerError = 2
}

export function unionToSystemHandlerResponseUnion(
  type: SystemHandlerResponseUnion,
  accessor: (obj:SystemHandlerError|SystemHandlerSuccess) => SystemHandlerError|SystemHandlerSuccess|null
): SystemHandlerError|SystemHandlerSuccess|null {
  switch(SystemHandlerResponseUnion[type]) {
    case 'NONE': return null; 
    case 'SystemHandlerSuccess': return accessor(new SystemHandlerSuccess())! as SystemHandlerSuccess;
    case 'SystemHandlerError': return accessor(new SystemHandlerError())! as SystemHandlerError;
    default: return null;
  }
}

export function unionListToSystemHandlerResponseUnion(
  type: SystemHandlerResponseUnion, 
  accessor: (index: number, obj:SystemHandlerError|SystemHandlerSuccess) => SystemHandlerError|SystemHandlerSuccess|null, 
  index: number
): SystemHandlerError|SystemHandlerSuccess|null {
  switch(SystemHandlerResponseUnion[type]) {
    case 'NONE': return null; 
    case 'SystemHandlerSuccess': return accessor(index, new SystemHandlerSuccess())! as SystemHandlerSuccess;
    case 'SystemHandlerError': return accessor(index, new SystemHandlerError())! as SystemHandlerError;
    default: return null;
  }
}
