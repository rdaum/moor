// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Var } from '../moor-var/var.js';


export class SystemHandlerSuccess {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SystemHandlerSuccess {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSystemHandlerSuccess(bb:flatbuffers.ByteBuffer, obj?:SystemHandlerSuccess):SystemHandlerSuccess {
  return (obj || new SystemHandlerSuccess()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSystemHandlerSuccess(bb:flatbuffers.ByteBuffer, obj?:SystemHandlerSuccess):SystemHandlerSuccess {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SystemHandlerSuccess()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

result(obj?:Var):Var|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Var()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startSystemHandlerSuccess(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addResult(builder:flatbuffers.Builder, resultOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, resultOffset, 0);
}

static endSystemHandlerSuccess(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // result
  return offset;
}

static createSystemHandlerSuccess(builder:flatbuffers.Builder, resultOffset:flatbuffers.Offset):flatbuffers.Offset {
  SystemHandlerSuccess.startSystemHandlerSuccess(builder);
  SystemHandlerSuccess.addResult(builder, resultOffset);
  return SystemHandlerSuccess.endSystemHandlerSuccess(builder);
}
}
