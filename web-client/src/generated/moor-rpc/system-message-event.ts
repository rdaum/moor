// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Obj } from '../moor-common/obj.js';


export class SystemMessageEvent {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SystemMessageEvent {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSystemMessageEvent(bb:flatbuffers.ByteBuffer, obj?:SystemMessageEvent):SystemMessageEvent {
  return (obj || new SystemMessageEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSystemMessageEvent(bb:flatbuffers.ByteBuffer, obj?:SystemMessageEvent):SystemMessageEvent {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SystemMessageEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

player(obj?:Obj):Obj|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Obj()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

message():string|null
message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startSystemMessageEvent(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addPlayer(builder:flatbuffers.Builder, playerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, playerOffset, 0);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, messageOffset, 0);
}

static endSystemMessageEvent(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // player
  builder.requiredField(offset, 6) // message
  return offset;
}

static createSystemMessageEvent(builder:flatbuffers.Builder, playerOffset:flatbuffers.Offset, messageOffset:flatbuffers.Offset):flatbuffers.Offset {
  SystemMessageEvent.startSystemMessageEvent(builder);
  SystemMessageEvent.addPlayer(builder, playerOffset);
  SystemMessageEvent.addMessage(builder, messageOffset);
  return SystemMessageEvent.endSystemMessageEvent(builder);
}
}
