// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import { Symbol } from "../moor-common/symbol.js";
import { Var } from "../moor-var/var.js";

export class TaskAbortedVerbNotFound {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): TaskAbortedVerbNotFound {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsTaskAbortedVerbNotFound(
        bb: flatbuffers.ByteBuffer,
        obj?: TaskAbortedVerbNotFound,
    ): TaskAbortedVerbNotFound {
        return (obj || new TaskAbortedVerbNotFound()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsTaskAbortedVerbNotFound(
        bb: flatbuffers.ByteBuffer,
        obj?: TaskAbortedVerbNotFound,
    ): TaskAbortedVerbNotFound {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new TaskAbortedVerbNotFound()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    where(obj?: Var): Var | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? (obj || new Var()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    what(obj?: Symbol): Symbol | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? (obj || new Symbol()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    }

    static startTaskAbortedVerbNotFound(builder: flatbuffers.Builder) {
        builder.startObject(2);
    }

    static addWhere(builder: flatbuffers.Builder, whereOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, whereOffset, 0);
    }

    static addWhat(builder: flatbuffers.Builder, whatOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, whatOffset, 0);
    }

    static endTaskAbortedVerbNotFound(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 4); // where
        builder.requiredField(offset, 6); // what
        return offset;
    }
}
