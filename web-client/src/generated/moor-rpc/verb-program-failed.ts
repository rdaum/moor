// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { VerbProgramError } from '../moor-rpc/verb-program-error.js';


export class VerbProgramFailed {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):VerbProgramFailed {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsVerbProgramFailed(bb:flatbuffers.ByteBuffer, obj?:VerbProgramFailed):VerbProgramFailed {
  return (obj || new VerbProgramFailed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsVerbProgramFailed(bb:flatbuffers.ByteBuffer, obj?:VerbProgramFailed):VerbProgramFailed {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new VerbProgramFailed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

error(obj?:VerbProgramError):VerbProgramError|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new VerbProgramError()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startVerbProgramFailed(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addError(builder:flatbuffers.Builder, errorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, errorOffset, 0);
}

static endVerbProgramFailed(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // error
  return offset;
}

static createVerbProgramFailed(builder:flatbuffers.Builder, errorOffset:flatbuffers.Offset):flatbuffers.Offset {
  VerbProgramFailed.startVerbProgramFailed(builder);
  VerbProgramFailed.addError(builder, errorOffset);
  return VerbProgramFailed.endVerbProgramFailed(builder);
}
}
