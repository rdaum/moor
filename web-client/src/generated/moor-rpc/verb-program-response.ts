// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

import {
    unionListToVerbProgramResponseUnion,
    unionToVerbProgramResponseUnion,
    VerbProgramResponseUnion,
} from "../moor-rpc/verb-program-response-union.js";

export class VerbProgramResponse {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): VerbProgramResponse {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsVerbProgramResponse(bb: flatbuffers.ByteBuffer, obj?: VerbProgramResponse): VerbProgramResponse {
        return (obj || new VerbProgramResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsVerbProgramResponse(
        bb: flatbuffers.ByteBuffer,
        obj?: VerbProgramResponse,
    ): VerbProgramResponse {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new VerbProgramResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    responseType(): VerbProgramResponseUnion {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? this.bb!.readUint8(this.bb_pos + offset) : VerbProgramResponseUnion.NONE;
    }

    response<T extends flatbuffers.Table>(obj: any): any | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
    }

    static startVerbProgramResponse(builder: flatbuffers.Builder) {
        builder.startObject(2);
    }

    static addResponseType(builder: flatbuffers.Builder, responseType: VerbProgramResponseUnion) {
        builder.addFieldInt8(0, responseType, VerbProgramResponseUnion.NONE);
    }

    static addResponse(builder: flatbuffers.Builder, responseOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, responseOffset, 0);
    }

    static endVerbProgramResponse(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        builder.requiredField(offset, 6); // response
        return offset;
    }

    static createVerbProgramResponse(
        builder: flatbuffers.Builder,
        responseType: VerbProgramResponseUnion,
        responseOffset: flatbuffers.Offset,
    ): flatbuffers.Offset {
        VerbProgramResponse.startVerbProgramResponse(builder);
        VerbProgramResponse.addResponseType(builder, responseType);
        VerbProgramResponse.addResponse(builder, responseOffset);
        return VerbProgramResponse.endVerbProgramResponse(builder);
    }
}
