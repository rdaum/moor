// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Symbol } from '../moor-common/symbol.js';
import { Uuid } from '../moor-common/uuid.js';


export class WorkerPong {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):WorkerPong {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsWorkerPong(bb:flatbuffers.ByteBuffer, obj?:WorkerPong):WorkerPong {
  return (obj || new WorkerPong()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsWorkerPong(bb:flatbuffers.ByteBuffer, obj?:WorkerPong):WorkerPong {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new WorkerPong()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

workerId(obj?:Uuid):Uuid|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Uuid()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

workerType(obj?:Symbol):Symbol|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Symbol()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startWorkerPong(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addWorkerId(builder:flatbuffers.Builder, workerIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, workerIdOffset, 0);
}

static addWorkerType(builder:flatbuffers.Builder, workerTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, workerTypeOffset, 0);
}

static endWorkerPong(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // worker_id
  builder.requiredField(offset, 6) // worker_type
  return offset;
}

}
