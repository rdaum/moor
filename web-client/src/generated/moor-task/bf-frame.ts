// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Var } from '../moor-var/var.js';


export class BfFrame {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BfFrame {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBfFrame(bb:flatbuffers.ByteBuffer, obj?:BfFrame):BfFrame {
  return (obj || new BfFrame()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBfFrame(bb:flatbuffers.ByteBuffer, obj?:BfFrame):BfFrame {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BfFrame()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

bfId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

bfTrampoline():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

hasTrampoline():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

bfTrampolineArg(obj?:Var):Var|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Var()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

returnValue(obj?:Var):Var|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new Var()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startBfFrame(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addBfId(builder:flatbuffers.Builder, bfId:number) {
  builder.addFieldInt16(0, bfId, 0);
}

static addBfTrampoline(builder:flatbuffers.Builder, bfTrampoline:bigint) {
  builder.addFieldInt64(1, bfTrampoline, BigInt('0'));
}

static addHasTrampoline(builder:flatbuffers.Builder, hasTrampoline:boolean) {
  builder.addFieldInt8(2, +hasTrampoline, +false);
}

static addBfTrampolineArg(builder:flatbuffers.Builder, bfTrampolineArgOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, bfTrampolineArgOffset, 0);
}

static addReturnValue(builder:flatbuffers.Builder, returnValueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, returnValueOffset, 0);
}

static endBfFrame(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
