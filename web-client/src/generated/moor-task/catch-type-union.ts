// automatically generated by the FlatBuffers compiler, do not modify

import { CatchAny } from '../moor-task/catch-any.js';
import { CatchErrors } from '../moor-task/catch-errors.js';


export enum CatchTypeUnion {
  NONE = 0,
  CatchAny = 1,
  CatchErrors = 2
}

export function unionToCatchTypeUnion(
  type: CatchTypeUnion,
  accessor: (obj:CatchAny|CatchErrors) => CatchAny|CatchErrors|null
): CatchAny|CatchErrors|null {
  switch(CatchTypeUnion[type]) {
    case 'NONE': return null; 
    case 'CatchAny': return accessor(new CatchAny())! as CatchAny;
    case 'CatchErrors': return accessor(new CatchErrors())! as CatchErrors;
    default: return null;
  }
}

export function unionListToCatchTypeUnion(
  type: CatchTypeUnion, 
  accessor: (index: number, obj:CatchAny|CatchErrors) => CatchAny|CatchErrors|null, 
  index: number
): CatchAny|CatchErrors|null {
  switch(CatchTypeUnion[type]) {
    case 'NONE': return null; 
    case 'CatchAny': return accessor(index, new CatchAny())! as CatchAny;
    case 'CatchErrors': return accessor(index, new CatchErrors())! as CatchErrors;
    default: return null;
  }
}
