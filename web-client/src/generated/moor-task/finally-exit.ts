// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

export class FinallyExit {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): FinallyExit {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsFinallyExit(bb: flatbuffers.ByteBuffer, obj?: FinallyExit): FinallyExit {
        return (obj || new FinallyExit()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsFinallyExit(bb: flatbuffers.ByteBuffer, obj?: FinallyExit): FinallyExit {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new FinallyExit()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    stack(): bigint {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt("0");
    }

    label(): number {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
    }

    static startFinallyExit(builder: flatbuffers.Builder) {
        builder.startObject(2);
    }

    static addStack(builder: flatbuffers.Builder, stack: bigint) {
        builder.addFieldInt64(0, stack, BigInt("0"));
    }

    static addLabel(builder: flatbuffers.Builder, label: number) {
        builder.addFieldInt16(1, label, 0);
    }

    static endFinallyExit(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        return offset;
    }

    static createFinallyExit(builder: flatbuffers.Builder, stack: bigint, label: number): flatbuffers.Offset {
        FinallyExit.startFinallyExit(builder);
        FinallyExit.addStack(builder, stack);
        FinallyExit.addLabel(builder, label);
        return FinallyExit.endFinallyExit(builder);
    }
}
