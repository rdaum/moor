// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { FinallyReasonUnion, unionToFinallyReasonUnion, unionListToFinallyReasonUnion } from '../moor-task/finally-reason-union.js';


export class FinallyReason {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FinallyReason {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFinallyReason(bb:flatbuffers.ByteBuffer, obj?:FinallyReason):FinallyReason {
  return (obj || new FinallyReason()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFinallyReason(bb:flatbuffers.ByteBuffer, obj?:FinallyReason):FinallyReason {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FinallyReason()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

reasonType():FinallyReasonUnion {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : FinallyReasonUnion.NONE;
}

reason<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startFinallyReason(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addReasonType(builder:flatbuffers.Builder, reasonType:FinallyReasonUnion) {
  builder.addFieldInt8(0, reasonType, FinallyReasonUnion.NONE);
}

static addReason(builder:flatbuffers.Builder, reasonOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, reasonOffset, 0);
}

static endFinallyReason(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 6) // reason
  return offset;
}

static createFinallyReason(builder:flatbuffers.Builder, reasonType:FinallyReasonUnion, reasonOffset:flatbuffers.Offset):flatbuffers.Offset {
  FinallyReason.startFinallyReason(builder);
  FinallyReason.addReasonType(builder, reasonType);
  FinallyReason.addReason(builder, reasonOffset);
  return FinallyReason.endFinallyReason(builder);
}
}
