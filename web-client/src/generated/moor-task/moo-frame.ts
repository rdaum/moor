// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { MooStackFrame } from '../moor-task/moo-stack-frame.js';


export class MooFrame {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MooFrame {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMooFrame(bb:flatbuffers.ByteBuffer, obj?:MooFrame):MooFrame {
  return (obj || new MooFrame()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMooFrame(bb:flatbuffers.ByteBuffer, obj?:MooFrame):MooFrame {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MooFrame()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

frame(obj?:MooStackFrame):MooStackFrame|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MooStackFrame()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startMooFrame(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addFrame(builder:flatbuffers.Builder, frameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, frameOffset, 0);
}

static endMooFrame(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // frame
  return offset;
}

static createMooFrame(builder:flatbuffers.Builder, frameOffset:flatbuffers.Offset):flatbuffers.Offset {
  MooFrame.startMooFrame(builder);
  MooFrame.addFrame(builder, frameOffset);
  return MooFrame.endMooFrame(builder);
}
}
