// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

export class ScopeEif {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): ScopeEif {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsScopeEif(bb: flatbuffers.ByteBuffer, obj?: ScopeEif): ScopeEif {
        return (obj || new ScopeEif()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsScopeEif(bb: flatbuffers.ByteBuffer, obj?: ScopeEif): ScopeEif {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ScopeEif()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static startScopeEif(builder: flatbuffers.Builder) {
        builder.startObject(0);
    }

    static endScopeEif(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        return offset;
    }

    static createScopeEif(builder: flatbuffers.Builder): flatbuffers.Offset {
        ScopeEif.startScopeEif(builder);
        return ScopeEif.endScopeEif(builder);
    }
}
