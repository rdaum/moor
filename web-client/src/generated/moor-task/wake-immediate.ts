// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Var } from '../moor-var/var.js';


export class WakeImmediate {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):WakeImmediate {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsWakeImmediate(bb:flatbuffers.ByteBuffer, obj?:WakeImmediate):WakeImmediate {
  return (obj || new WakeImmediate()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsWakeImmediate(bb:flatbuffers.ByteBuffer, obj?:WakeImmediate):WakeImmediate {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new WakeImmediate()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

returnValue(obj?:Var):Var|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Var()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startWakeImmediate(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addReturnValue(builder:flatbuffers.Builder, returnValueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, returnValueOffset, 0);
}

static endWakeImmediate(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createWakeImmediate(builder:flatbuffers.Builder, returnValueOffset:flatbuffers.Offset):flatbuffers.Offset {
  WakeImmediate.startWakeImmediate(builder);
  WakeImmediate.addReturnValue(builder, returnValueOffset);
  return WakeImmediate.endWakeImmediate(builder);
}
}
