// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

export class WakeTask {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): WakeTask {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsWakeTask(bb: flatbuffers.ByteBuffer, obj?: WakeTask): WakeTask {
        return (obj || new WakeTask()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsWakeTask(bb: flatbuffers.ByteBuffer, obj?: WakeTask): WakeTask {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new WakeTask()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    taskId(): bigint {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt("0");
    }

    static startWakeTask(builder: flatbuffers.Builder) {
        builder.startObject(1);
    }

    static addTaskId(builder: flatbuffers.Builder, taskId: bigint) {
        builder.addFieldInt64(0, taskId, BigInt("0"));
    }

    static endWakeTask(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        return offset;
    }

    static createWakeTask(builder: flatbuffers.Builder, taskId: bigint): flatbuffers.Offset {
        WakeTask.startWakeTask(builder);
        WakeTask.addTaskId(builder, taskId);
        return WakeTask.endWakeTask(builder);
    }
}
